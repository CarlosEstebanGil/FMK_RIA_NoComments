<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="102" height="24">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			// la opción con combos de gabriel no la uso.
			/*private var horas:ArrayList = new ArrayList ([
				{label:"00",data:"00"}, 
				{label:"01",data:"01"},
				{label:"02",data:"02"},
				{label:"03",data:"03"},
				{label:"04",data:"04"},
				{label:"05",data:"05"},
				{label:"06",data:"06"},
				{label:"07",data:"07"},
				{label:"08",data:"08"},
				{label:"09",data:"09"},
				{label:"10",data:"10"},
				{label:"11",data:"11"},
				{label:"12",data:"12"},
				{label:"13",data:"13"},
				{label:"14",data:"14"},
				{label:"15",data:"15"},
				{label:"16",data:"16"},
				{label:"17",data:"17"},
				{label:"18",data:"18"},
				{label:"19",data:"19"},
				{label:"20",data:"20"},
				{label:"21",data:"21"},
				{label:"22",data:"22"},
				{label:"23",data:"23"},
				{label:"24",data:"24"}]);
			
			private var minutos:ArrayList = new ArrayList ([
				{label:"00",data:"00"}, 
				{label:"01",data:"01"},
				{label:"02",data:"02"},
				{label:"03",data:"03"},
				{label:"04",data:"04"},
				{label:"05",data:"05"},
				{label:"06",data:"06"},
				{label:"07",data:"07"},
				{label:"08",data:"08"},
				{label:"09",data:"09"},
				{label:"10",data:"10"},
				{label:"11",data:"11"},
				{label:"12",data:"12"},
				{label:"13",data:"13"},
				{label:"14",data:"14"},
				{label:"15",data:"15"},
				{label:"16",data:"16"},
				{label:"17",data:"17"},
				{label:"18",data:"18"},
				{label:"19",data:"19"},
				{label:"20",data:"20"},
				{label:"21",data:"21"},
				{label:"22",data:"22"},
				{label:"23",data:"23"},
				{label:"24",data:"24"},
				{label:"25",data:"25"},
				{label:"26",data:"26"},
				{label:"27",data:"27"},
				{label:"28",data:"28"},
				{label:"29",data:"29"},
				{label:"30",data:"30"},
				{label:"31",data:"31"},
				{label:"32",data:"32"},
				{label:"33",data:"33"},
				{label:"34",data:"34"},
				{label:"35",data:"35"},
				{label:"36",data:"36"},
				{label:"37",data:"37"},
				{label:"38",data:"38"},
				{label:"39",data:"39"},
				{label:"40",data:"40"},
				{label:"41",data:"41"},
				{label:"42",data:"42"},
				{label:"43",data:"43"},
				{label:"44",data:"44"},
				{label:"45",data:"45"},
				{label:"46",data:"46"},
				{label:"47",data:"47"},
				{label:"48",data:"48"},
				{label:"49",data:"49"},
				{label:"50",data:"50"},
				{label:"51",data:"51"},
				{label:"52",data:"52"},
				{label:"53",data:"53"},
				{label:"54",data:"54"},
				{label:"55",data:"55"},
				{label:"56",data:"56"},
				{label:"57",data:"57"},
				{label:"58",data:"58"},
				{label:"59",data:"59"}]);*/
			
			public static function leadingZero(value:Number):String {
				if(value < 10){
					return "0" + value;
				}
				return value.toString();    
			}
			
			//2014-09-05%2000:00:00 -> 00:00:00
			public function getTime():String { //gets the completed and formated date 
				var r:String="";
				try {
					r=leadingZero(hora.value) + ":" + leadingZero(minutos.value) + ":" + "00"; 
				} 
				catch(error:Error)  {
					throw new Error(error.message);
				}finally {
					return r;
				}			   
			}
			
			//recibe "00:00:00" y toma la hora y minutos.
			public function setTime(completeHour:String):void { //gets the completed and formated date 
				try {
					var split:Array = completeHour.split(":");
					hora.value = split[0];
					minutos.value=split[1]; 
				} 
				catch(error:Error)  {
					throw new Error(error.message);
				}	   
			}
 			
			
			//Obs:
			//[Uso junto con EDateime] (opcional) (solo para armar fechas completas con esta hora):
			//para armar una fecha completa (datitime/timestamp) se puede usar el EDatetime, pasandole el getTime strValue de uno
			//de estos ( ej: 00:00:00 ) .Esto es usando una funcion publica del edatetime q si le pasas explicitamente un time
			//usa ese mas lo que tiene seteado (recordemos q lo bueno del edatetime es q trabaja con la fecha del servidor xa 
			//cuando se usa la fecha del dia (cosa muy común).
			//Seria algo asi mepa:
			//dfObjInstance.getFormattedTimeStamp(null,null,thisETimeObj.getTime(),null); //el 1er null dice q tome el selectedDate
			//actual del componente EDateTime ( si quiero pasarle la hora se tengo que pasar con la tmb propia func del objecto
			//Datetime->getFormattedTimeStamp(strDateFromServerSvcReqXej) (q me dá el date corresp xa usar en getFormattedTimeStamp)!
		]]>
	</fx:Script>
	<s:layout>
		<s:HorizontalLayout gap="0" verticalAlign="middle"/>
	</s:layout>
	<s:NumericStepper id="hora" minimum="0" maximum="23" width="50" height="20" visible="true"/> <!-- value="{_someDate.getHours()}" -->
	<s:NumericStepper id="minutos" minimum="0" maximum="59" valueFormatFunction="{leadingZero}"  width="50" height="20" visible="true" /> <!-- value="{_someDate.getMinutes()}" -->
</s:Group>
